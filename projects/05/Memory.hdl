// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[12..14],a=ramLoad1,b=ramLoad2,c=ramLoad3,d=ramLoad4,e=screenLoad1,f=screenLoad2,g=scrap1,h=scrap2);
    Or8Way(in[0]=ramLoad1,in[1]=ramLoad2,in[2]=ramLoad3,in[3]=ramLoad3,in[4..7]=false,out=ramLoad);
    Or(a=screenLoad1,b=screenLoad2,out=screenLoad);
    RAM16K(in=in,load=ramLoad,address=address[0..13],out=ram16kOut);
    Screen(in=in,load=screenLoad,address=address[0..12],out=screenOut);
    Keyboard(out=keyboardOut);
    Mux8Way16(a=ram16kOut,b=ram16kOut,c=ram16kOut,d=ram16kOut,e=screenOut,f=screenOut,g=keyboardOut,h=false,sel=address[12..14],out=out);
}
