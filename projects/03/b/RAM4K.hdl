// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[9..11],a=g1load,b=g2load,c=g3load,d=g4load,e=g5load,f=g6load,g=g7load,h=g8load);

    // pass load to the correct register
    RAM512(in=in,load=g1load,address=address[0..8],out=g1out);
    RAM512(in=in,load=g2load,address=address[0..8],out=g2out);
    RAM512(in=in,load=g3load,address=address[0..8],out=g3out);
    RAM512(in=in,load=g4load,address=address[0..8],out=g4out);
    RAM512(in=in,load=g5load,address=address[0..8],out=g5out);
    RAM512(in=in,load=g6load,address=address[0..8],out=g6out);
    RAM512(in=in,load=g7load,address=address[0..8],out=g7out);
    RAM512(in=in,load=g8load,address=address[0..8],out=g8out);


    // select correct output
    Mux8Way16(a=g1out,b=g2out,c=g3out,d=g4out,e=g5out,f=g6out,g=g7out,h=g8out,sel=address[9..11],out=out);
}
